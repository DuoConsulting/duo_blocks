<?php

/**
 * Implements hook_theme().
 */
function duo_blocks_accordion_theme() {
  // Indicate that we should use template files included in this module to
  // render our block types. The templates can be overridden by a theme.
  return [
    'block__bundle__accordion' => [
      'template' => 'block--bundle--accordion',
      'base hook' => 'block',
    ],
    'paragraph__accordion_item' => [
      'template' => 'paragraph--accordion-item--default',
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_preprocess_hook().
 */
function duo_blocks_accordion_preprocess_block(&$variables, $hook) {
  if (isset($variables['derivative_plugin_id']) &&
      $variables['derivative_plugin_id'] == 'accordion') {
    $block = $variables['elements']['content']['#block_content'];

    // Create a "tabs" variable to simplify output of tabbed content in the
    // template file.
    if (
      $block->hasField('field_accordion_items') &&
      !$block->field_accordion_items->isEmpty()
    ) {
      $entities = $block->field_accordion_items->referencedEntities();
      $variables['id'] = $block->id();
      $variables['tabs'] = [];
    
      foreach ($entities as $key => $entity) {
        if (isset($entity->field_accordion_item_title) && isset($entity->field_accordion_item_content)) {
          $variables['tabs'][$key]['title'] = $entity->field_accordion_item_title->view('default');
          $variables['tabs'][$key]['content'] = $entity->field_accordion_item_content->view('default');          
        }
      }
    }
  }
}
